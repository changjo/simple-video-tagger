name: Simple Video Tagger app build

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ "macos-latest" ]
        python-version: [ "3.12" ]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        virtualenvs-path: .venv
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    
    - name: Lint
      run: |
        poetry run isort --check .
        poetry run black --check --fast .
        poetry run flake8 .
        
    - name: Build app using PyInstaller
      run: |
        poetry run pyinstaller macos.spec --clean --noconfirm
    
    - name: Make a dmg
      run: |
        git clone https://github.com/create-dmg/create-dmg.git
        create-dmg/create-dmg \
          --volname "Simple Video Tagger" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --app-drop-link 650 185 \
          "dist/Simple Video Tagger.dmg" \
          "dist/Simple Video Tagger.app"

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: SimpleVideoTagger
        path: |
          dist/Simple\ Video\ Tagger.dmg
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v4
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: SimpleVideoTagger

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "Simple Video Tagger.dmg"
        asset_name: Simple Video Tagger.dmg
        asset_content_type: application/octet-stream
